proxy_cache_path /tmp/NGINX_cache/ keys_zone=backcache:10m;

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

match health_check {
    status 200;
    header Content-Type = text/html;
    body ~ "Welcome To Dizzyworld";
}

# Map the PURGE method to the request method
map $request_method $purge_method {
    PURGE 1;
    default 0;
}

upstream weblogic {
    # Health-monitored upstream groups must have a zone defined
    zone weblogic 64k;

    # List of WebLogic application servers
    server 192.168.25.33:7001 slow_start=30s;
    server 192.168.25.69:7001 slow_start=30s;

    # Session persistence based on JSESSION ID, if necessary
    sticky learn create=$upstream_cookie_JSESSIONID
                 lookup=$cookie_JSESSIONID
                 zone=client_sessions:1m;
}

server {
    listen 80;
    server_name example.com;

    # Required for NGINX Plus to provide extended status information
    status_zone weblogic;

    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name example.com;

    # Required for NGINX Plus to provide extended status information
    status_zone weblogic-ssl;

    ssl_certificate       /etc/nginx/ssl/certificate-name;
    ssl_certificate_key /etc/nginx/ssl/private-key;

    ssl_session_cache   shared:SSL:1m;

    ssl_prefer_server_ciphers on;

    # Return a temporary redirect to the /weblogic-app/ directory
    # when user requests '/'
    location = / {
        return 302 /weblogic-app/;
    }

    # A location block is needed per URI group
    location /weblogic-app/ {
        proxy_cache backcache;
        proxy_pass http://weblogic;

        # Enable the the content cache purge method
        proxy_cache_purge $purge_method;

        # Active health checks
        health_check uri=/benefits match=health_check;
    }

    # WebSocket configuration
    location /wstunnel/ {
        proxy_pass http://weblogic;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}
